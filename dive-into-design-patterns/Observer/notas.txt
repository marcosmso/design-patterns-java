Observer is a behavioral design pattern that lets you define a
subscription mechanism to notify multiple objects about any
events that happen to the object theyâ€™re observing.

The Observer pattern suggests that you add a subscription
mechanism to the publisher class so individual objects can
subscribe to or unsubscribe from a stream of events coming
from that publisher.

Use the Observer pattern when changes to the state of one
object may require changing other objects, and the actual set
of objects is unknown beforehand or changes dynamically.

